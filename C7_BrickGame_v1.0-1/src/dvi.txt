Привет, друг) Когда ты хотел посмотреть документацию ты, наверное, думал, что откроется html страничка)
Однако, когда я начал делать проект, я забыл использовать doxygen...
После чего мне стало лень ее делать и я опишу документацию сдесь.

В каталоге brick_game\tetris находиться хедер для backend'а тетриса,
в каталоге brick_game\tetris\functions находяться файлы с функциями, о них поговорим ниже:

Хедер содержит все функции, структуры и дефайны.
Структура UserAction_t используется для понимания, какую кнопку нажал пользователь.
Структура Figure используется для описания текущей фигуры, ее типа, ее координат.
Структура GameInfo_t используется для описания текущей игры,
она описывает поле, следующую фигуру, счет, максимальный счет, текущий уровень.

В static_funсtions
1) GameInfo_t Init_GameInfo_t();
2) void Init_Matrix(int** matrix);
3) void Clear_GameInfo_t(GameInfo_t* game_inf);
4) int Check_Collision(Figure figure, GameInfo_t game_inf);

1 - функция возвращающая GameInfo_t, используется для инициализации игры.
2 - функция заолняет матрицу, с рамками по краям
3 - используется для отчистки памяти игры
4 - используется для определения сталкновения фигуры с полем/фигурой на поле.

В moving_figure
1) int Rotate_Figure(Figure* figure, GameInfo_t game_inf);
2) int Move_Left(Figure* figure, GameInfo_t game_inf);
3) int Move_Right(Figure* figure, GameInfo_t game_inf);
4) int Move_Down(Figure* figure, GameInfo_t game_inf);

1 - используется для вращения фигуры, возвращает SUCCESS если поворот произошел,
FAIL в обратном случае
2 - используется для перемещения фигуры влево, возвращает SUCCESS если перемещение произошло,
FAIL в обратном случае
3 - используется для перемещения фигуры вправо, возвращает SUCCESS если перемещение произошло,
FAIL в обратном случае
4 - используется для перемещения фигуры вниз, возвращает SUCCESS если перемещение произошло,
FAIL в обратном случае

В making_figure
1) Figure Make_Figure();

1 - возвращает Figure. Используется для получения новой случайной фигуру.
Также в даном файле есть семь функций для создания матриц для каждой фигуры.

В field_changing
1) void Connecting(Figure figure, GameInfo_t* game_inf);
2) void Spawn_New_Figure(Figure* figure, GameInfo_t* game_inf);
3) int Chech_And_Clear_lines(GameInfo_t* game_inf);

1 - функция соединяет фигуру и поле, записывая в GameInfo_t новое объединенное поле
2 - функция для появления новой фигуры на поле
3 - функция удаляет заполненные строки, возвращает количество удаленных линий

В game
1) void Speed_Up(int score, GameInfo_t* game_inf);
2) void Spawn_And_Check(Figure* figure, GameInfo_t* game_inf);
3) void userInput(UserAction_t action, Figure* figure, GameInfo_t* game_inf);
4) UserAction_t input(int ch);
5) void Score(int lines, GameInfo_t* game_inf);

1 - функция увеличивает текущий уровень, соответственно ускоряя игру
2 - функция соединяет поле и фигура, удаляет линии и создает новую фигуру
3 - функция принимает действие пользователя и выполняет соответствующую функцию
4 - функция принимает ввод пользователя и вовращает соответствующее действие
5 - функция увеличивает счет в игре, в зависимости от кол-ва удаленных линий

В дирректории gui/cli находится хедер для frontend'а тетриса,
в дирректории gui/cli находится файл с функциями

В interface
1) void show_field(GameInfo_t game_inf, Figure figure);
2) void show_stats(GameInfo_t game_inf);
3) void txt_hello();
4) bool txt_end(GameInfo_t game_inf);
5) bool pause();
6) bool exitt();
7) bool pause_and_exit(UserAction_t action);

1 - функция для отрисовки фигуры и поля
2 - функция для отрисовки статистики и следующей фигуры
3 - функция для отрисовки приветственного экрана
4 - функция для отрисовки экрана, при проигрыше
5 - функция для отображения паузы
6 - функция для выхода из игры 
7 - функция объединяет 5-ую и 6-ю функции

В файле tetris.h находится функция main и game:
в функции game описана логика игры
в функции main зациклина функция main, также в ней происходит настройка ncurses

Для того чтобы запустить игру, сначала придется скачать библиотеку ncurses:
sudo apt-get install libncurses5-dev libncursesw5-dev
Далее прописываем в консоль:
make
make скомпилирует библиотеки и саму игру.
Чтобы запустить игру следует прописать:
make open


Спасибо за внимание и хорошего дня!))